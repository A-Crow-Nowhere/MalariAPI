# --- Conda lock (as added before) ---
: "${MAPI_CONDA_ROOT:="$HOME/tools/miniconda3"}"
export PATH="$MAPI_CONDA_ROOT/bin:$PATH"
export CONDA_ENVS_DIRS="$MAPI_CONDA_ROOT/envs"
[[ -f "$MAPI_CONDA_ROOT/etc/profile.d/conda.sh" ]] && source "$MAPI_CONDA_ROOT/etc/profile.d/conda.sh"
# --- end ---

SCRIPT_PATH="$(readlink -f "$0" 2>/dev/null || python3 - <<'PY'
import os,sys; print(os.path.realpath(sys.argv[1]))
PY
"$0")"
REPO_ROOT="$(cd "$(dirname "$SCRIPT_PATH")/.." && pwd)"
BIN_DIR="$REPO_ROOT/bin"
MOD_DIR="$REPO_ROOT/bin/modules"
MOD_YAML_DIR="$MOD_DIR/yaml"
PIPE_DIR="$REPO_ROOT/bin/pipelines"
PIPE_YAML_DIR="$PIPE_DIR/yaml"
PKG_DIR="$BIN_DIR/packages"


find_module_yaml(){ n="$1"; for c in "$MOD_YAML_DIR/$n.yml" "$MOD_YAML_DIR/$n.yaml"; do [[ -f "$c" ]] && { echo "$c"; return; }; done; return 1; }
find_pipeline_yaml(){ n="$1"; for c in "$PIPE_YAML_DIR/$n.yml" "$PIPE_YAML_DIR/$n.yaml"; do [[ -f "$c" ]] && { echo "$c"; return; }; done; return 1; }

list_items(){
  case "$1" in
    modules)   find "$MOD_DIR"  -maxdepth 1 -type f -name '*.sh' -printf '%f\n' | sed 's/\.sh$//' | sort ;;
    pipelines) find "$PIPE_DIR" -maxdepth 1 -type f -name '*.sh' -printf '%f\n' | sed 's/\.sh$//' | sort ;;
     packages)  find "$PKG_DIR"  -maxdepth 1 -mindepth 1 -type d -printf '%f\n' | sort ;;
    scripts)   find "$BIN_DIR/scripts" -maxdepth 1 -type f -executable -printf '%f\n' 2>/dev/null | sort ;;
    *) echo "unknown type: $1" >&2; exit 2;;
  esac
}

run_item(){
  t="$1"; shift; name="$1"; shift || true
  case "$t" in

  modules)
    entry="$MOD_DIR/$name.sh"; meta="$(find_module_yaml "$name" || true)"
    export MAPI_REPO_ROOT="$REPO_ROOT" MAPI_ENVS_DIR="$REPO_ROOT/envs/yaml"
    [[ -n "${meta:-}" ]] && export MAPI_MODULE_YAML="$meta"
    exec "$entry" "$@"
    ;;
  pipelines)
    entry="$PIPE_DIR/$name.sh"; meta="$(find_pipeline_yaml "$name" || true)"
    export MAPI_REPO_ROOT="$REPO_ROOT" MAPI_ENVS_DIR="$REPO_ROOT/envs/yaml"
    [[ -n "${meta:-}" ]] && export MAPI_PIPELINE_YAML="$meta"
    exec "$entry" "$@"
    ;;
  packages)
    entry="$PKG_DIR/$name/$name"
    exec "$entry" "$@"
    ;;
  scripts)
    entry="$BIN_DIR/scripts/$name"; [[ -x "$entry" ]] || { echo "No $entry" >&2; exit 4; }
    exec "$entry" "$@"
    ;;
   *) echo "unknown type: $t" >&2; exit 2;;
  esac
}
